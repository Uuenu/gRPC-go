// Code generated by protoc-gen-go. DO NOT EDIT.
// source: screen_message.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Screen_Panel int32

const (
	Screen_UNKNOWN Screen_Panel = 0
	Screen_IPS     Screen_Panel = 1
	Screen_OLED    Screen_Panel = 2
)

var Screen_Panel_name = map[int32]string{
	0: "UNKNOWN",
	1: "IPS",
	2: "OLED",
}

var Screen_Panel_value = map[string]int32{
	"UNKNOWN": 0,
	"IPS":     1,
	"OLED":    2,
}

func (x Screen_Panel) String() string {
	return proto.EnumName(Screen_Panel_name, int32(x))
}

func (Screen_Panel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8a2814cd02b8aba7, []int{0, 0}
}

type Screen struct {
	SizeInch             float32            `protobuf:"fixed32,1,opt,name=size_inch,json=sizeInch,proto3" json:"size_inch,omitempty"`
	Resolution           *Screen_Resolution `protobuf:"bytes,2,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Panel                Screen_Panel       `protobuf:"varint,3,opt,name=panel,proto3,enum=lab.pcbook.Screen_Panel" json:"panel,omitempty"`
	Multitouch           bool               `protobuf:"varint,4,opt,name=multitouch,proto3" json:"multitouch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Screen) Reset()         { *m = Screen{} }
func (m *Screen) String() string { return proto.CompactTextString(m) }
func (*Screen) ProtoMessage()    {}
func (*Screen) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a2814cd02b8aba7, []int{0}
}

func (m *Screen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Screen.Unmarshal(m, b)
}
func (m *Screen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Screen.Marshal(b, m, deterministic)
}
func (m *Screen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Screen.Merge(m, src)
}
func (m *Screen) XXX_Size() int {
	return xxx_messageInfo_Screen.Size(m)
}
func (m *Screen) XXX_DiscardUnknown() {
	xxx_messageInfo_Screen.DiscardUnknown(m)
}

var xxx_messageInfo_Screen proto.InternalMessageInfo

func (m *Screen) GetSizeInch() float32 {
	if m != nil {
		return m.SizeInch
	}
	return 0
}

func (m *Screen) GetResolution() *Screen_Resolution {
	if m != nil {
		return m.Resolution
	}
	return nil
}

func (m *Screen) GetPanel() Screen_Panel {
	if m != nil {
		return m.Panel
	}
	return Screen_UNKNOWN
}

func (m *Screen) GetMultitouch() bool {
	if m != nil {
		return m.Multitouch
	}
	return false
}

type Screen_Resolution struct {
	Width                uint32   `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Heigth               uint32   `protobuf:"varint,2,opt,name=heigth,proto3" json:"heigth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Screen_Resolution) Reset()         { *m = Screen_Resolution{} }
func (m *Screen_Resolution) String() string { return proto.CompactTextString(m) }
func (*Screen_Resolution) ProtoMessage()    {}
func (*Screen_Resolution) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a2814cd02b8aba7, []int{0, 0}
}

func (m *Screen_Resolution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Screen_Resolution.Unmarshal(m, b)
}
func (m *Screen_Resolution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Screen_Resolution.Marshal(b, m, deterministic)
}
func (m *Screen_Resolution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Screen_Resolution.Merge(m, src)
}
func (m *Screen_Resolution) XXX_Size() int {
	return xxx_messageInfo_Screen_Resolution.Size(m)
}
func (m *Screen_Resolution) XXX_DiscardUnknown() {
	xxx_messageInfo_Screen_Resolution.DiscardUnknown(m)
}

var xxx_messageInfo_Screen_Resolution proto.InternalMessageInfo

func (m *Screen_Resolution) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Screen_Resolution) GetHeigth() uint32 {
	if m != nil {
		return m.Heigth
	}
	return 0
}

func init() {
	proto.RegisterEnum("lab.pcbook.Screen_Panel", Screen_Panel_name, Screen_Panel_value)
	proto.RegisterType((*Screen)(nil), "lab.pcbook.Screen")
	proto.RegisterType((*Screen_Resolution)(nil), "lab.pcbook.Screen.Resolution")
}

func init() {
	proto.RegisterFile("screen_message.proto", fileDescriptor_8a2814cd02b8aba7)
}

var fileDescriptor_8a2814cd02b8aba7 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0x36, 0xed, 0xda, 0xd5, 0x37, 0x26, 0xe5, 0x31, 0xa4, 0x28, 0x4a, 0xd9, 0xc5, 0x9e, 0x22,
	0xcc, 0x9b, 0xe0, 0x45, 0xf4, 0x30, 0x94, 0x6e, 0x64, 0x88, 0xe0, 0x65, 0xb4, 0x31, 0x2c, 0xc1,
	0x2e, 0x29, 0x4d, 0x8a, 0xe0, 0x7f, 0xe2, 0x7f, 0x2b, 0x6b, 0xc5, 0xed, 0xe0, 0xf1, 0xfb, 0xde,
	0xf7, 0x8b, 0x07, 0x13, 0xcb, 0x1b, 0x21, 0xf4, 0x7a, 0x2b, 0xac, 0x2d, 0x36, 0x82, 0xd6, 0x8d,
	0x71, 0x06, 0xa1, 0x2a, 0x4a, 0x5a, 0xf3, 0xd2, 0x98, 0x8f, 0xe9, 0xb7, 0x07, 0xe1, 0xaa, 0x13,
	0xe1, 0x39, 0x1c, 0x5b, 0xf5, 0x25, 0xd6, 0x4a, 0x73, 0x99, 0x90, 0x94, 0x64, 0x1e, 0x8b, 0x76,
	0xc4, 0x5c, 0x73, 0x89, 0x77, 0x00, 0x8d, 0xb0, 0xa6, 0x6a, 0x9d, 0x32, 0x3a, 0xf1, 0x52, 0x92,
	0x8d, 0x66, 0x17, 0x74, 0x1f, 0x44, 0xfb, 0x10, 0xca, 0xfe, 0x44, 0xec, 0xc0, 0x80, 0x14, 0x82,
	0xba, 0xd0, 0xa2, 0x4a, 0xfc, 0x94, 0x64, 0x27, 0xb3, 0xe4, 0x1f, 0xe7, 0x72, 0x77, 0x67, 0xbd,
	0x0c, 0x2f, 0x01, 0xb6, 0x6d, 0xe5, 0x94, 0x33, 0x2d, 0x97, 0xc9, 0x20, 0x25, 0x59, 0xc4, 0x0e,
	0x98, 0xb3, 0x5b, 0x80, 0x7d, 0x13, 0x4e, 0x20, 0xf8, 0x54, 0xef, 0xae, 0x5f, 0x3d, 0x66, 0x3d,
	0xc0, 0x53, 0x08, 0xa5, 0x50, 0x1b, 0x27, 0xbb, 0xb9, 0x63, 0xf6, 0x8b, 0xa6, 0x57, 0x10, 0x74,
	0x5d, 0x38, 0x82, 0xe1, 0x4b, 0xfe, 0x94, 0x2f, 0x5e, 0xf3, 0xf8, 0x08, 0x87, 0xe0, 0xcf, 0x97,
	0xab, 0x98, 0x60, 0x04, 0x83, 0xc5, 0xf3, 0xe3, 0x43, 0xec, 0xdd, 0x07, 0x6f, 0xfe, 0x75, 0x5d,
	0x96, 0x61, 0xf7, 0xb5, 0x9b, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x04, 0x5f, 0xea, 0xb5, 0x4d,
	0x01, 0x00, 0x00,
}
